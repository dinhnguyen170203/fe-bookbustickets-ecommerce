{"ast":null,"code":"import { getAllDepartureAdminService, getAllDestinationAdminService, getAllTimeAdminService, searchTripsService } from \"../../service/TripService\";\nimport actionTypes from \"./actionTypes\";\nexport const getAllDestination = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getAllDestinationAdminService();\n      if (res && res.status === 'OK') {\n        dispatch(fetchAllDestinationSuccess(res.data));\n      } else {\n        dispatch(fetchAllDestinationFailed());\n      }\n    } catch (error) {\n      dispatch(fetchAllDestinationFailed());\n      console.log('Error get all destination: '.error);\n    }\n  };\n};\nexport const fetchAllDestinationSuccess = data => ({\n  type: actionTypes.FETCH_STATUS_DESTINATIONS_SUCCESS,\n  data: data\n});\nexport const fetchAllDestinationFailed = () => ({\n  type: actionTypes.FETCH_STATUS_DESTINATIONS_FAILED\n});\nexport const getAllDeparture = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getAllDepartureAdminService();\n      if (res && res.status === 'OK') {\n        dispatch(fetchAllDepartureSuccess(res.data));\n      } else {\n        dispatch(fetchAllDepartureFailed());\n      }\n    } catch (error) {\n      dispatch(fetchAllDepartureFailed());\n      console.log('Error get all departure: '.error);\n    }\n  };\n};\nexport const fetchAllDepartureSuccess = data => ({\n  type: actionTypes.FETCH_STATUS_DEPARTURES_SUCCESS,\n  data: data\n});\nexport const fetchAllDepartureFailed = () => ({\n  type: actionTypes.FETCH_STATUS_DEPARTURES_FAILED\n});\nexport const getAllTime = () => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await getAllTimeAdminService();\n      if (res && res.status === 'OK') {\n        dispatch(fetchAllTimeSuccess(res.data));\n      } else {\n        dispatch(fetchAllTimeFailed());\n      }\n    } catch (error) {\n      dispatch(fetchAllTimeFailed());\n      console.log('Error get all time: '.error);\n    }\n  };\n};\nexport const fetchAllTimeSuccess = data => ({\n  type: actionTypes.FETCH_ALL_TIME_SUCCESS,\n  data: data\n});\nexport const fetchAllTimeFailed = () => ({\n  type: actionTypes.FETCH_ALL_TIME_FAILED\n});\nexport const searchTripsAction = search => {\n  return async (dispatch, getState) => {\n    try {\n      let res = await searchTripsService(search);\n      if (res && res.status === 'OK') {\n        dispatch(fetchSeachTripsSuccess(res.data));\n      } else {\n        dispatch(fetchSeachTripsFailed());\n      }\n    } catch (error) {\n      dispatch(fetchSeachTripsFailed());\n      console.log('Error get all time: '.error);\n    }\n  };\n};\nexport const fetchSeachTripsSuccess = data => ({\n  type: actionTypes.SEARCH_TRIPS_SUCCESS,\n  data: data\n});\nexport const fetchSeachTripsFailed = () => ({\n  type: actionTypes.SEARCH_TRIPS_FAILED\n});","map":{"version":3,"names":["getAllDepartureAdminService","getAllDestinationAdminService","getAllTimeAdminService","searchTripsService","actionTypes","getAllDestination","dispatch","getState","res","status","fetchAllDestinationSuccess","data","fetchAllDestinationFailed","error","console","log","type","FETCH_STATUS_DESTINATIONS_SUCCESS","FETCH_STATUS_DESTINATIONS_FAILED","getAllDeparture","fetchAllDepartureSuccess","fetchAllDepartureFailed","FETCH_STATUS_DEPARTURES_SUCCESS","FETCH_STATUS_DEPARTURES_FAILED","getAllTime","fetchAllTimeSuccess","fetchAllTimeFailed","FETCH_ALL_TIME_SUCCESS","FETCH_ALL_TIME_FAILED","searchTripsAction","search","fetchSeachTripsSuccess","fetchSeachTripsFailed","SEARCH_TRIPS_SUCCESS","SEARCH_TRIPS_FAILED"],"sources":["D:/Thien1808/fe-bookbustickets-ecommerce/src/store/actions/TripAction.js"],"sourcesContent":["import { getAllDepartureAdminService, getAllDestinationAdminService, getAllTimeAdminService, searchTripsService } from \"../../service/TripService\"\r\nimport actionTypes from \"./actionTypes\"\r\n\r\n\r\nexport const getAllDestination = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await getAllDestinationAdminService()\r\n            if(res && res.status === 'OK') {\r\n                dispatch(fetchAllDestinationSuccess(res.data))\r\n            }else {\r\n                dispatch(fetchAllDestinationFailed())\r\n            }\r\n        } catch (error) {\r\n            dispatch(fetchAllDestinationFailed())\r\n            console.log('Error get all destination: '. error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchAllDestinationSuccess = (data) => ({\r\n    type: actionTypes.FETCH_STATUS_DESTINATIONS_SUCCESS,\r\n    data: data\r\n})\r\n\r\nexport const fetchAllDestinationFailed = () => ({\r\n    type: actionTypes.FETCH_STATUS_DESTINATIONS_FAILED\r\n})\r\n\r\nexport const getAllDeparture = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await getAllDepartureAdminService()\r\n            if(res && res.status === 'OK') {\r\n                dispatch(fetchAllDepartureSuccess(res.data))\r\n            }else {\r\n                dispatch(fetchAllDepartureFailed())\r\n            }\r\n        } catch (error) {\r\n            dispatch(fetchAllDepartureFailed())\r\n            console.log('Error get all departure: '. error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchAllDepartureSuccess = (data) => ({\r\n    type: actionTypes.FETCH_STATUS_DEPARTURES_SUCCESS,\r\n    data: data\r\n})\r\n\r\nexport const fetchAllDepartureFailed = () => ({\r\n    type: actionTypes.FETCH_STATUS_DEPARTURES_FAILED\r\n})\r\n\r\nexport const getAllTime = () => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await getAllTimeAdminService()\r\n            if(res && res.status === 'OK') {\r\n                dispatch(fetchAllTimeSuccess(res.data))\r\n            }else {\r\n                dispatch(fetchAllTimeFailed())\r\n            }\r\n        } catch (error) {\r\n            dispatch(fetchAllTimeFailed())\r\n            console.log('Error get all time: '. error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchAllTimeSuccess = (data) => ({\r\n    type: actionTypes.FETCH_ALL_TIME_SUCCESS,\r\n    data: data\r\n})\r\n\r\nexport const fetchAllTimeFailed = () => ({\r\n    type: actionTypes.FETCH_ALL_TIME_FAILED\r\n})\r\n\r\nexport const searchTripsAction = (search) => {\r\n    return async (dispatch, getState) => {\r\n        try {\r\n            let res = await searchTripsService(search)\r\n            if(res && res.status === 'OK') {\r\n                dispatch(fetchSeachTripsSuccess(res.data))\r\n            }else {\r\n                dispatch(fetchSeachTripsFailed())\r\n            }\r\n        } catch (error) {\r\n            dispatch(fetchSeachTripsFailed())\r\n            console.log('Error get all time: '. error);\r\n        }\r\n    }\r\n}\r\n\r\nexport const fetchSeachTripsSuccess = (data) => ({\r\n    type: actionTypes.SEARCH_TRIPS_SUCCESS,\r\n    data: data\r\n})\r\n\r\nexport const fetchSeachTripsFailed = () => ({\r\n    type: actionTypes.SEARCH_TRIPS_FAILED\r\n})"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}